# Generated by Django 4.2.21 on 2025-05-19 13:45

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_resolved", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("restaurant_name", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("category", models.CharField(max_length=50)),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, unique=True)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=50)),
                ("phone", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=254)),
                ("cuisine_type", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                ("capacity", models.PositiveIntegerField()),
                ("venue_capacity", models.PositiveIntegerField()),
                ("venue_price_per_hour", models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ("opening_hours", models.CharField(max_length=100)),
                ("image", models.ImageField(blank=True, null=True, upload_to="restaurants/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("user_username", models.CharField(max_length=150)),
                ("user_email", models.EmailField(max_length=254)),
                ("restaurant_name", models.CharField(max_length=100)),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("user_username", "restaurant_name")},
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("user_username", models.CharField(max_length=150)),
                ("user_email", models.EmailField(max_length=254)),
                (
                    "booking_type",
                    models.CharField(
                        choices=[("TABLE", "Table Reservation"), ("VENUE", "Venue Booking"), ("EVENT", "Event Booking")],
                        max_length=20,
                    ),
                ),
                ("restaurant_name", models.CharField(max_length=100)),
                ("restaurant_city", models.CharField(max_length=50)),
                ("booking_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField(blank=True, null=True)),
                ("party_size", models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ("event_title", models.CharField(blank=True, max_length=200)),
                ("event_ticket_price", models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ("total_price", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("special_requests", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("CONFIRMED", "Confirmed"), ("CANCELLED", "Cancelled")],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-booking_date", "-start_time"],
                "unique_together": {("restaurant_name", "booking_date", "start_time", "booking_type")},
            },
        ),
    ]
